<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_ysera_magic_bullet</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_scene_bullet</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
m_speedX = 0;
m_speedY = 0;
m_accelerate = -0.55;
originaldirection = 270;
alarm[0]=20;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>shooter.m_arrowStatus = ArrowStatus.InHand;
shooter.m_isAttacking = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>shooter.m_arrowStatus = ArrowStatus.FlyingTo;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if(shooter.m_arrowStatus == ArrowStatus.FlyingBack)   // adjust speed to follow player
//{
 //   deltaX = shooter.phy_position_x - phy_position_x;
//    deltaY = shooter.phy_position_y - 33 - phy_position_y;
    
//    m_speedX = 10 * deltaX / sqrt(deltaX * deltaX + deltaY * deltaY);
//    m_speedY = 10 * deltaY / sqrt(deltaX * deltaX + deltaY * deltaY); 
//}

phy_position_x = phy_position_x + m_speedX;
phy_position_y = phy_position_y + m_speedY;
Xpercent = abs(m_speedX)/(abs(m_speedX)+abs(m_speedY));
Ypercent = abs(m_speedY)/(abs(m_speedX)+abs(m_speedY))
if(m_speedX &gt; 0)
    {m_speedX += m_accelerate*Xpercent;
    if(m_speedX &lt; 0)
        {m_speedX = 0;}
    }
if(m_speedX &lt; 0)
    {m_speedX -= m_accelerate*Xpercent;
    if(m_speedX &gt; 0)
        {m_speedX = 0;}
    }

if(m_speedY &gt; 0)
    {m_speedY += m_accelerate*Ypercent;
    if(m_speedY &lt; 0)
        {m_speedY = 0;}
    }
if(m_speedY &lt; 0)
    {m_speedY -= m_accelerate*Ypercent;
    if(m_speedY &gt; 0)
        {m_speedY = 0;}
    }

if(shooter.sprite_index == spr_ysera_skill &amp;&amp; shooter.m_arrowStatus != ArrowStatus.InHand){
    if(shooter.image_index &gt; 2 &amp;&amp; shooter.m_fired == false){
        shooter.phy_position_x = phy_position_x;
        shooter.phy_position_y = phy_position_y + 33;
        shooter.m_arrowStatus = ArrowStatus.InHand;
        shooter.m_fired = true;
        instance_destroy();
    }
    
}

if(shooter.sprite_index == spr_ysera_attack_front || shooter.sprite_index == spr_ysera_attack_back ||shooter.sprite_index == spr_ysera_attack_side){
    if(shooter.m_arrowStatus != ArrowStatus.InHand){
        deltaX = shooter.phy_position_x - phy_position_x;
         deltaY = shooter.phy_position_y  - 33 - phy_position_y;
    
         m_curSpeedX = 7 * deltaX / sqrt(deltaX * deltaX + deltaY * deltaY);
         m_curSpeedY = 7 * deltaY / sqrt(deltaX * deltaX + deltaY * deltaY);
    
         m_speedX = 0;
         m_speedY = 0;
         phy_position_x = phy_position_x + m_curSpeedX;
         phy_position_y = phy_position_y + m_curSpeedY;

         shooter.m_arrowStatus = ArrowStatus.FlyingBack;
         shooter.m_fired = true;
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_ysera_hitbox">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(shooter.m_arrowStatus != ArrowStatus.InHand){
instance_destroy();
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_scene_base">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>i = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>m_speedX = 0;
m_speedY = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>80,80</point>
    <point>16,80</point>
  </PhysicsShapePoints>
</object>
